using System;

namespace CSharpAIAssistant.Models
{
    /// <summary>
    /// Represents the result of a processed AI task
    /// </summary>
    public class AITaskResult
    {
        /// <summary>
        /// Gets or sets the unique identifier for the task result
        /// </summary>
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets the ID of the AI task this result belongs to (unique relationship)
        /// </summary>
        public int AITaskId { get; set; }

        /// <summary>
        /// Gets or sets the content generated by the AI model
        /// </summary>
        public string GeneratedContent { get; set; }

        /// <summary>
        /// Gets or sets the number of tokens used in the prompt
        /// </summary>
        public int? TokensUsed_Prompt { get; set; }

        /// <summary>
        /// Gets or sets the number of tokens used in the completion/response
        /// </summary>
        public int? TokensUsed_Completion { get; set; }

        /// <summary>
        /// Gets or sets the total number of tokens used for this task
        /// </summary>
        public int? TokensUsed_Total { get; set; }

        /// <summary>
        /// Gets or sets the processing time in milliseconds
        /// </summary>
        public long? ProcessingTimeMs { get; set; }

        /// <summary>
        /// Gets or sets the identifier of the model that was actually used for processing
        /// </summary>
        public string ModelUsedIdentifier { get; set; }

        /// <summary>
        /// Gets or sets whether the task was processed successfully
        /// </summary>
        public bool Success { get; set; }

        /// <summary>
        /// Gets or sets the date and time when this result was created
        /// </summary>
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Initializes a new instance of the AITaskResult class
        /// </summary>
        public AITaskResult()
        {
            CreatedAt = DateTime.UtcNow;
            Success = false;
        }
    }
}
